
>> Tecnologia front-end <<

- A tecnologia front-end é dividida em duas categorias: ferramenta de modelagem e linguagens de programação OO.

- A lógica da construção do código do software expressada para o usuário, sua apresentação, a interface de operação do software, a inteligência operacional do software é desenvolvida pela tecnologia front-end

- A primeira linguagem orientada a objetos pura utilizada para a construção dentro do paradigma OO foi a linguagem Smalltalk.


>> Tecnologia front-end - Linguagens de Programação OO <<

- De acordo com (LEE; TAPFENHART, 2001), a linguagem de programação OO deve atender quatro características principais:

    1 - Encapsulamento de dados - garantir a confiabilidade, independência dos dados e a mantenebilidade do software.

    2- Abstração de dados - lógica de processamento dos dados definida pelos métodos.

    3 - Coesão dinâmica - mecanismos de troca de mensagens entre os objetos.

    4 - Herança - permitir herdar atributos de outras classes.

    - Principais Linguagens de Programação OO e que dão suporte a OO: JAVA, C, C++, Python, JavaScript (JS), Perl, PHP, Ruby, Google Go, Swift, VB .NET, Linguagem R e Objective-C.


>> Linguagens OO <<

- O framework funciona no domínio da aplicação, provendo uma solução completa para uma família de problemas específicos de uma determinada funcionalidade. Usando basicamente um conjunto de classes e interfaces, decompostas em quadros com seus respectivos códigos.

- Modelos e plataformas de desenvolvimento com frameworks:

    - Eclipse Modeling Framework (EMF) Disponível em https://eclipse.org/downloads/

    - Netbeans IDE - Disponível em https://netbeans.org/downloads

    - Microsoft.Net Framework* - Disponível em: https://msdn.microsoft.com/ptbr/library/5a4x27ek(v=vs.110).aspx

- (*) O Microsoft.NET Framework faz parte do sistema operacional do Windows e pode ser usado por outras IDEs. No desenvolvimento do software é usado especificamente pelo Visual Studio.


>> Passando da análise ao projeto <<

- O projeto inicia a partir do caso de uso, que á a base de tudo e que fornece uma perspectiva do software sob o ponto de vista do externo a este software (negócio/ator).

- Do caso de são produzidas as classes. Os objetos servem de apoio na interpretação dos atributos da classe e a sequência lógica de processamento responde pelos métodos das classes. É nessa fase que se tem a transição da análise para o projeto.

- Modelos de classes:

    - Modelo conceitual - representa as classes no domínio do negócio.

    - Modelo de projeto - desenvolvido na fase de projeto (design), é uma evolução do modelo conceitual.

    - Modelo de implementação - é a conversão da classe em código por meio de uma linguagem de programação


>> Modelos de classes - Modelo conceitual <<

>> Modelo de projeto <<

